(deflisten notifs :initial "(box :orientation \"vertical\" :space-evenly false :spacing 10 :class \"notifications-container\") "
`/bin/python /home/luky/.config/eww/scripts/notify-client.py`)

(defwindow notifications
  :monitor 0
  :geometry (geometry :x "20px"
    :y "20px"
    :anchor "bottom right"
  )
  :stacking "overlay"
  :exclusive false
  (literal :content notifs)
)


(defwindow test
  :monitor 0
  :geometry (geometry :x "20px"
    :y "20px"
  :anchor "bottom right")
  :stacking "overlay"
  :exclusive false
  (box :orientation "vertical"
    :space-evenly false
    :spacing 10
    :class "notifications-container"
    (box :class "notification-card"
      (eventbox :onclick "gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.InvokeAction 32 'default'"
        (box :orientation "v"
          :space-evenly false
          :spacing 5
          (box :orientation "h"
            :class "notification-header"
            :space-evenly false
            :spacing 5
            (label :text "MyApp"
              :class "app-name"
              :limit-width 150
              :hexpand true
              :xalign 0
            )
            (button :class "close-button"
              :onclick "gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.CloseNotification 32"
              :height 30
              :width 30 "✖"
            )
          )
          ( box :orientation "v"
            :class "notification-body"
            :space-evenly false
            (label :class "notification-title"
              :halign "start"
              :text "Title"
            )
            (label :justify "left"
              :wrap true
              :xalign 0
              :yalign 0
              :show-truncated false
              :class "notification-body"
              :halign "start"
              :text "This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. This is a long text that will be used to test the notification system. "
            )
          )
          ( box :class "notificatios-actions"
            :spacing 5
            (button :class "action-button"
              :height 30
              :onclick "gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.InvokeAction 32 'open'" "Open"
            )
            (button :class "action-button"
            :height 30 :onclick "gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.InvokeAction 32 'close'" "Close" )
) ) ) ) )
)


; Biến đệm cho Bluetooth
(defvar bluetooth_enabled true)
(defvar bluetooth_scanning false)
(defvar bluetooth_show_nearby false)


; Danh sách thiết bị kết nối đã có (giả lập)
(defvar bluetooth_connected_devices '[
  {"name": "Sony WH-1000XM4", "type": "/usr/share/icons/AdwaitaLegacy/24x24/devices/audio-headphones.png", "battery": 80, "connected": true},
  {"name": "Bluetooth Mouse", "type": "input-mouse-symbolic", "battery": 45, "connected": true},
  {"name": "Keyboard K380", "type": "input-keyboard-symbolic", "battery": 90, "connected": true}
]')


; làm sao để thay đổi dữ liệu

; Danh sách thiết bị lân cận (giả lập)
(defvar bluetooth_nearby_devices '[
  {"name": "JBL Speaker", "type": "audio-speakers-symbolic", "pairable": true, "connected": false},
  {"name": "Xbox Controller", "type": "input-gaming-symbolic", "pairable": true, "connected": false},
  {"name": "Samsung Galaxy", "type": "phone-symbolic", "pairable": true, "connected": false}
]')

; Widget hiển thị một thiết bị bluetooth
(defwidget bluetooth-device [device]
  (box :class "bluetooth-device ${device.connected ? 'connected' : ''}"
    :space-evenly false
    :spacing 10
    (image :class "device-icon"
    :path {device.type})
    (box :orientation "v"
      :space-evenly false
      :hexpand true
      (label :class "device-name"
        :text {device.name}
      :halign "start")
      (label :class "device-status"
        :text {device.connected ? "Connected" : "Available"}
      :halign "start"))
    (box :visible {device.battery != "null" && device.battery != ""}
      (label :class "device-battery"
      :text "${device.battery}%"))
    (button :class "device-action disconnect-button"
      :visible {device.connected}
      (label :text "✕")
    )
    (button :class "device-action"
      :visible {!device.connected && device.pairable}
    "Connect")))

; Dropdown Bluetooth
(defwindow bluetooth-dropdown
  :monitor 0
  :geometry (geometry :x "20px"
    :y "20px"
  :anchor "top right")
  :stacking "overlay"
  :exclusive false
  :windowtype "dialog"
  (box :class "bluetooth-panel"
    :orientation "v"
    :space-evenly false
    ; :spacing 10
    
    ; Header with toggle
    (box :class "bluetooth-header"
      :space-evenly false
      :spacing 10
      (label :class "bluetooth-title"
        :text "Bluetooth"
        :halign "start"
      :hexpand true)
      (button :class "bluetooth-toggle"
        :onclick "eww update bluetooth_enabled=${!bluetooth_enabled}"
        (box :class "toggle ${bluetooth_enabled ? 'active' : ''}"
          (label :text {bluetooth_enabled ? "ON" : "OFF"}))))
    
    ; Status
    (box :class "bluetooth-status"
      :space-evenly false
      :spacing 5
    )
    
    ; Connected devices section
    (box :class "bluetooth-connected-devices"
      :orientation "v"
      :visible bluetooth_enabled
      :space-evenly false
      (label :class "section-title"
        :text "Connected Devices"
      :halign "start")
      (box :class "device-list"
        :orientation "v"
        :space-evenly false
        (for device in bluetooth_connected_devices
          (bluetooth-device :device device))))
    
    ; Separator
    (box :class "separator"
    :height 1)
    
    ; Nearby devices section
    (box :class "bluetooth-nearby-devices"
      :orientation "v"
      :visible {bluetooth_enabled && bluetooth_show_nearby}
      :space-evenly false
      (box :class "nearby-header"
        :space-evenly false
        (label :class "section-title"
          :text "Nearby Devices"
          :halign "start"
        :hexpand true)))
    
    ; Nearby devices list
    (box :class "device-list"
      :orientation "v"
      :visible {bluetooth_enabled && bluetooth_show_nearby}
      :space-evenly false
      (for device in bluetooth_nearby_devices
        (bluetooth-device :device device)))
    
    ; Scan button at bottom
    (button :class "scan-button"
      :visible bluetooth_enabled
      :onclick "eww update bluetooth_scanning=true bluetooth_show_nearby=true && sleep 2 && eww update bluetooth_scanning=false"
      (box :space-evenly false :spacing 5
        (label :text {bluetooth_scanning ? "Scanning..." : "Scan for devices"})
        (circular-progress :value {bluetooth_scanning ? 100 : 0}
          :class "scan-progress"
          :start-at 75
          :thickness 3
        :clockwise true)))
  ))

(defvar brightness_level 70)

(defwindow backlight
  :monitor 0
  :geometry (geometry :x "20px"
    :y "20px"
  :anchor "bottom center")
  :stacking "overlay"
  :exclusive false
  :windowtype "dialog"
  (box :class "backlight-panel"
    :orientation "v"
    :space-evenly false
    
    ; Main content - chỉ hiển thị icon và slider
    (eventbox :class "backlight-content"
      :onhover "python ~/.config/eww/scripts/timer_client.py delete backlight"
      :onhoverlost "python ~/.config/eww/scripts/timer_client.py add backlight 5 \"eww close backlight\""
      (overlay
        (box :class "backlight-slider-container"
          (scale :class "backlight-slider"
            :value brightness_level
            :min 1
            :max 101
          :onchange "eww update brightness_level={} && brightnessctl set {}%"))
        (box :class "overlay"
          (label :class "backlight-percentage-overlay ${brightness_level > 45 ? 'high' : 'low'}"
            :text "${brightness_level}%"
            :halign "center"
          :valign "center")
        )
      )
    )
    
  )
)